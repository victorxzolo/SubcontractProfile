@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
        .ToList();
    var controllerName = ViewContext.RouteData.Values["Controller"];
    var strView = ViewContext.RouteData.Values["action"].ToString();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}
    @*<div title="@Localizer["Language"] @requestCulture?.Provider?.GetType().Name">*@


        <form id="selectLanguage" action="@Url.Action("SetLanguage",controllerName)" method="post" class="form-inline">
            @Html.Hidden("returnUrl", Url.Action(strView, controllerName))
            <label asp-for="@requestCulture.RequestCulture.UICulture.Name" class="text-light mr-sm-2">@Localizer["Language"]</label>
            <select name="culture" class="form-control"
                onchange="this.form.submit();"
                asp-for="@requestCulture.RequestCulture.UICulture.Name" asp-items="cultureItems">
                <option value="">@Localizer["ddlLanguage"]</option>
                <option value="th">@Localizer["Thai"]</option>
                <option value="en">@Localizer["English"]</option>
        </select>
        </form>
    @*</div>*@
