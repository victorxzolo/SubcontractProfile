@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Booking";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<div id="pageID" style="display:none;">Booking</div>

<div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 layout-spacing">


    <div class="skills layout-spacing ">
        <div class="widget-content widget-content-area">
            <h3 class="">@Localizer["SearchBookingTraining"]</h3>
            <div class="widget-content1">

                <div class="form-row mb-4">
                    <div class="form-group col-md-6">
                        <label for="inputLocationCodeMain">@Localizer["CompanyName"]</label>


                        <div class='input-group'>
                            <input type="text" class="form-control" id="txtCompNo" placeholder="Company Name" />

                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        <label for="">@Localizer["TaxID"]</label>
                        <input type="text" class="form-control" id="txttaxID" maxlength="13" placeholder="TaxID" onkeypress="return isNumberKey(event);">

                    </div>


                    @*<div class="form-group col-md-6">
                            <label for="inputLocationCodeMain">Request No.</label>
                            <input type="text" class="form-control" id="txtReqNo" placeholder="Request No.">

                        </div>*@


                    <div class="form-group col-md-6">
                        <label for="lbltaxid">@Localizer["RequestDateFrom"]</label>
                        <div class='input-group date p-0' id='regisdatefrom'>
                            <input type='text' class="form-control" id="reqdateFrom" />
                            <div class="input-group-append input-group-addon">
                                <span class="input-group-text px-4">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>

                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="txttaxid">@Localizer["RequestDateTo"]</label>
                        <div class='input-group date p-0' id='regisdateTo'>
                            <input type='text' class="form-control" id="reqdateTo" />
                            <div class="input-group-append input-group-addon">
                                <span class="input-group-text px-4">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>

                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        <label for="lblbookingDatefrom">@Localizer["BookingDateFrom"]</label>
                        <div class='input-group date p-0' id='bookingdatefrom'>
                            <input type='text' class="form-control" id="inpbookingdateFrom" />
                            <div class="input-group-append input-group-addon">
                                <span class="input-group-text px-4">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>

                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="lblbookingDateTo">@Localizer["BookingDateTo"]</label>
                        <div class='input-group date p-0' id='bookingdateTo'>
                            <input type='text' class="form-control" id="inpbookingdateTo" />
                            <div class="input-group-append input-group-addon">
                                <span class="input-group-text px-4">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>

                        </div>
                    </div>
                    @*<div class="form-group col-md-6">
                        <label for="inputStatus">@Localizer["Status"]</label>
                        <select id="inputStatus" class="form-control" data-live-search="true"></select>
                    </div>*@

                </div>

                <div style="text-align:center">

                    <button id="btnMainClear" type="button" onclick="clearField();" class="btn btn-dark mb-2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                             stroke-linecap="round" stroke-linejoin="round" class="feather feather-x-circle">
                            <circle cx="12" cy="12" r="10"></circle>
                            <line x1="15" y1="9" x2="9" y2="15"></line>
                            <line x1="9" y1="9" x2="15" y2="15"></line>
                        </svg> @Localizer["Reset"]
                    </button>
                    <button id="btnSearchRqt" type="button" onclick="inittbSearchResult();" class="btn btn-success mb-2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                             stroke-linecap="round" stroke-linejoin="round" class="feather feather-search">
                            <circle cx="11" cy="11" r="8"></circle>
                            <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
                        </svg>  @Localizer["Search"]
                    </button>


                </div>


            </div>


            <br />
            <div class="widget-heading">
                <h3 class="">@Localizer["SearchResult"]</h3>

            </div>

            <div class="table-responsive mb-4 mt-4">
                <table id="tbSearchResult" class="table table-hover" style="width:100%">
                    <thead>
                        <tr>

                            <th>@Localizer["Action"]</th>
                            <th>@Localizer["Status"] </th>
                            <th>@Localizer["CompanyName"]</th>
                            <th>@Localizer["TaxID"] </th>
                            <th>@Localizer["RequestDate"] </th>
                            <th>@Localizer["TrainingDate"] </th>
                            <th>@Localizer["Course"]</th>
                            <th style="text-align:center">@Localizer["NumberOfTrainees"]</th>
                            <th>@Localizer["CoursePrice"]</th>
                            <th>@Localizer["Vat7"]</th>
                            <th>@Localizer["TotalAmount"]</th>
                        </tr>

                    </thead>

                </table>
            </div>


        </div>
    </div>
</div>

@section modalpanel {

    <div id="AdjustReqTraining" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myExtraLargeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 id="hTitleEdit" class="modal-title">@Localizer["Booking"]</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form id="frNew" class="needs-validation" novalidate>
                    <div class="modal-body">

                        <div class="container">

                            <div class="row">
                                <div class="col-sm-2">
                                    <label>@Localizer["CompanyName"] :</label>
                                </div>
                                <div class="col-sm-4">

                                    <label id="lblcompname"></label>
                                </div>

                                <div class="col-sm-2">
                                    <label>@Localizer["TaxID"] :</label>
                                </div>
                                <div class="col-sm-4">
                                    <label id="lbltaxid"></label>
                                </div>

                            </div>


                            <div class="row">
                                <div class="col-sm-2">
                                    <label>@Localizer["ContactPhone"] :</label>
                                </div>
                                <div class="col-sm-4">

                                    <label id="lblcontphone"></label>
                                </div>

                                <div class="col-sm-2">
                                    <label>@Localizer["Email"] :</label>
                                </div>
                                <div class="col-sm-4">
                                    <label id="lblemail"></label>
                                </div>

                            </div>


                            <div class="row">
                                <div class="col-sm-2">
                                    <label> @Localizer["RequestDateFrom"] : </label>
                                </div>
                                <div class="col-sm-4">

                                    <div class='input-group date p-0' id='requestdateFrom'>

                                        <label id="inputRequestdateFrom"></label>
                                    </div>
                                </div>

                                <div class="col-sm-2">
                                    <label> @Localizer["RequestDateTo"] :</label>
                                </div>
                                <div class="col-sm-4">

                                    <div class='input-group date p-0' id='requestdateTo'>

                                        <label id="inputRequestdateTo"></label>

                                    </div>
                                </div>

                            </div>

                            <div class="row">
                                <div class="col-sm-2">
                                    <label>@Localizer["Course"] :</label>
                                </div>
                                <div class="col-sm-4">
                                    <select id="selCourse" class="form-control"  data-live-search="true" required></select>
                                    <div class="invalid-feedback">@Localizer["ErrorCourse"]</div>

                                </div>

                                <div class="col-sm-2">
                                    <label>@Localizer["CoursePrice"] :</label>
                                </div>
                                <div class="col-sm-4">
                                    <label id="lblcourseprice"></label>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-sm-2">
                                    <label>@Localizer["Remark"] :</label>
                                </div>
                                <div class="col-sm-10">
                                    <label id="lblRemark"> </label>
                                </div>

                            </div>
                            <br />

                            <h4>@Localizer["Trainee"] </h4>
                            <hr>
                            <div class="table-responsive">
                                <table id="tbSearchEngineer" style="width:100%" class="table table-bordered table-hover table-striped table-checkable table-highlight-head mb-4">
                                    <thead>
                                        <tr>

                                            <th>@Localizer["LocationName"]</th>
                                            <th>@Localizer["TeamName"]</th>
                                            <th>@Localizer["Engineer"]</th>
                                            <th>@Localizer["Position"]</th>
                                            <th>@Localizer["ContactPhone"]</th>
                                            <th>@Localizer["Email"]</th>

                                        </tr>
                                    </thead>
                                </table>
                            </div>

                            <div class="row">
                                <div class="col-md-8 "></div>
                                <div class="col-md-4 col-sm-12">
                                    <div class="row ">
                                        <div class="col-md-12">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <p>@Localizer["TotalPrice"] :</p>
                                                </div>
                                                <div class="col-md-6" style="text-align: left;">
                                                    <label id="lblttcost"></label>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-md-12 mt-3">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <p>@Localizer["Vat7"] :</p>
                                                </div>
                                                <div class="col-md-6" style="text-align: left;">
                                                    <label id="lblvat7"></label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 mt-3">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <p>@Localizer["NetPrice"] :</p>
                                                </div>
                                                <div class="col-md-6" style="text-align: left;">
                                                    <label id="lblCousetotal"></label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 mt-3">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <p>@Localizer["Tax"] :</p>
                                                </div>
                                                <div class="col-md-6" style="text-align: left;">
                                                    <label id="lbltax"></label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 mt-3">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <p>@Localizer["NetTax"] :</p>
                                                </div>
                                                <div class="col-md-6" style="text-align: left;">
                                                    <label id="lblTotalAmountBytax"></label>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>



                            <input type="hidden" id="Coursecost" />
                            <input type="hidden" id="rowCount" />
                            <input type="hidden" id="trnid" />
                            <input type="hidden" id="compid" />

                            <input type="hidden" id="teamid" />
                            <input type="hidden" id="engid" />

                            <input type="hidden" id="locid" />

                            <h4>@Localizer["ForStaffAIS"]</h4>
                            <hr>
                            <div class="row">
                                <div class="col-sm-2">
                                    <label>@Localizer["BookingTrainingDate"]</label>
                                </div>
                                <div class="col-sm-4">
                                    <div class='input-group date p-0' id='bookdatefrom'>
                                        <input type='text' class="form-control" id="bookingDate" required />
                                        <div class="input-group-append input-group-addon">
                                            <span class="input-group-text px-4">
                                                <i class="fa fa-calendar"></i>
                                            </span>
                                        </div>
                                        <div class="invalid-feedback">@Localizer["ErrorBookingTrainingDate"]</div>
                                    </div>
                                </div>

                            </div>
                            <br />
                            <div class="row">
                                <div class="col-sm-2">
                                    <label>@Localizer["Remark"] :</label>
                                </div>
                                <div class="col-sm-10">
                                    <textarea id="txtaisremark" class="form-control" rows="3"> </textarea>

                                </div>

                            </div>
                        </div>

                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-power"><path d="M18.36 6.64a9 9 0 1 1-12.73 0"></path><line x1="12" y1="2" x2="12" y2="12"></line></svg>
                            @Localizer["Close"]
                        </button>
                        <button id="btnSave" type="submit" class="btn btn-primary">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-save"><path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path><polyline points="17 21 17 13 7 13 7 21"></polyline><polyline points="7 3 7 8 15 8"></polyline></svg>
                            @Localizer["Booking"]
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

}

@section scripts{


    <script type="text/javascript">
                        var oTable;
                        var oTableEngineer;
                        var compname =  $("#txtCompNo").val();

                        $(document).ready(function () {


                            GetDropDownByNameCourse();
                            GetDropDownByNameTrainigStatus();

                            $('#txtCompNo').autocomplete({
                                lookup: function (query, done) {
                                    $.ajax({
                                        type: "POST",
                                        url: '@Url.Action("GetCompany", "Booking")',
                                        data: { "companyname": query },
                                        dataType: "json",
                                        success: function (data) {
                                            var suggestions = $.map(data.response, function (v) {
                                                return {
                                                    'value': v.CompanyNameTh, 'data': v.CompanyId
                                                };
                                            });
                                            var result = { 'suggestions': suggestions };
                                            done(result);


                                        },
                                        error: function (xhr, status, error) {

                                        }
                                    });
                                },
                                minChars: 1,
                                onSelect: function (suggestion) {
                                    $('#selection').html('You selected: ' + suggestion.value);
                                },
                                showNoSuggestionNotice: true,
                                noSuggestionNotice: '@Localizer["MessageAutocomplete"]',
                            });

                            $('#regisdatefrom').datetimepicker({
                                format: "DD/MM/YYYY",
                                showClear: true,
                                showClose: true,
                                icons: {
                                    time: 'fa fa-clock-o',
                                    date: 'fa fa-calendar',
                                    up: 'fa fa-chevron-up',
                                    down: 'fa fa-chevron-down',
                                    previous: 'fa fa-chevron-left',
                                    next: 'fa fa-chevron-right',
                                    today: 'icon-screenshot',
                                    clear: 'fa fa-trash',
                                    close: 'fa fa-time'
                                }
                            });


                            $('#regisdateTo').datetimepicker({
                                format: "DD/MM/YYYY",
                                showClear: true,
                                showClose: true,
                                icons: {
                                    time: 'fa fa-clock-o',
                                    date: 'fa fa-calendar',
                                    up: 'fa fa-chevron-up',
                                    down: 'fa fa-chevron-down',
                                    previous: 'fa fa-chevron-left',
                                    next: 'fa fa-chevron-right',
                                    today: 'icon-screenshot',
                                    clear: 'fa fa-trash',
                                    close: 'fa fa-time'
                                }
                            });

                            $('#bookingdatefrom').datetimepicker({
                                format: "DD/MM/YYYY",
                                showClear: true,
                                showClose: true,
                                icons: {
                                    time: 'fa fa-clock-o',
                                    date: 'fa fa-calendar',
                                    up: 'fa fa-chevron-up',
                                    down: 'fa fa-chevron-down',
                                    previous: 'fa fa-chevron-left',
                                    next: 'fa fa-chevron-right',
                                    today: 'icon-screenshot',
                                    clear: 'fa fa-trash',
                                    close: 'fa fa-time'
                                }
                            });

                            $('#bookingdateTo').datetimepicker({
                                format: "DD/MM/YYYY",
                                showClear: true,
                                showClose: true,
                                icons: {
                                    time: 'fa fa-clock-o',
                                    date: 'fa fa-calendar',
                                    up: 'fa fa-chevron-up',
                                    down: 'fa fa-chevron-down',
                                    previous: 'fa fa-chevron-left',
                                    next: 'fa fa-chevron-right',
                                    today: 'icon-screenshot',
                                    clear: 'fa fa-trash',
                                    close: 'fa fa-time'
                                }
                            });


                            $('#bookdatefrom').datetimepicker({
                                format: "DD/MM/YYYY",
                                showClear: true,
                                showClose: true,
                                icons: {
                                    time: 'fa fa-clock-o',
                                    date: 'fa fa-calendar',
                                    up: 'fa fa-chevron-up',
                                    down: 'fa fa-chevron-down',
                                    previous: 'fa fa-chevron-left',
                                    next: 'fa fa-chevron-right',
                                    today: 'icon-screenshot',
                                    clear: 'fa fa-trash',
                                    close: 'fa fa-time'
                                }
                            });

                            inittbSearchResult();

                            $("#tbSearchEngineer").on("change", "input", function () {
                                var row = $(this).closest("tr");
                                var price = row.find('#txtCoursePrice').val();

                                calculateCourcePrice();

                            });



                            $(document).on('show.bs.modal', '.modal', function () {
                                var zIndex = 1040 + (10 * $('.modal:visible').length);
                                $(this).css('z-index', zIndex);
                                setTimeout(function () {
                                    $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
                                }, 0);
                            });

                            $(document).on('hidden.bs.modal', '.modal', function () {
                                $('.modal:visible').length && $(document.body).addClass('modal-open');
                            });

                        });

                        'use strict';
                        window.addEventListener('load', function () {
                            // Fetch all the forms we want to apply custom Bootstrap validation styles to
                            var forms = document.getElementsByClassName('needs-validation');
                            // Loop over them and prevent submission
                            var validation = Array.prototype.filter.call(forms, function (form) {
                                form.addEventListener('submit', function (event) {

                                    if (form.checkValidity() === false) {
                                        event.preventDefault();
                                        event.stopPropagation();

                                    } else {
                                        onSave();
                                        event.preventDefault();
                                        event.stopPropagation();
                                    }
                                    form.classList.add('was-validated');
                                }, false);
                            });
                        }, false);

                 function GetDropDownByNameCourse() {
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("GetDropDownList", "Booking")',
                        data: { '_ddlType': 'training_couse' },
                        dataType: 'json',
                        success: function (data) {

                            $("#selCourse").empty();
                            $("#selCourse").append('<option value="">--@Localizer["ErrorCourse"]--</option>');
                            $.each(data, function (id, result) {

                                $("#selCourse").append('<option value="' + result.dropdown_value + '">' + result.dropdown_text  +'</option>');
                                $("#lblcourseprice").html(FormatNumber(result.value1));
                            });


                            },
                            failure: function () {
                                $("#selCourse").empty();
                                $("#selCourse").append('<option value="">--@Localizer["ErrorCourse"]--</option>');
                            }
                    });
                     $('#selCourse').prop('disabled', 'disabled');
                  }

        function taxCalculate(cost) {
            //const formatter = new Intl.NumberFormat('en-US', {
            //    minimumFractionDigits: 2,
            //    maximumFractionDigits: 2,
            //});
            alert(cost);
            var incTax = 0;
            incTax = cost * (3 / 100);
            incTax = formatter.format(incTax);
             
            return incTax;
        }
                function isNumberKey(evt) {
                    var charCode = (evt.which) ? evt.which : evt.keyCode
                    return !(charCode > 31 && (charCode < 48 || charCode > 57));
                }

            function onSave() {

                            var trainingModel = new Object();
                            trainingModel.TrainingId = $('#trnid').val();
                            trainingModel.CompanyId = $('#compid').val();
                            trainingModel.BookingDateStr = $('#bookingDate').val();
                            trainingModel.RemarkForAis = $('#txtaisremark').val();
                            trainingModel.Course = $("select[id$=selCourse]").val();

                                 $.ajax({
                                      url: '@Url.Action("onSave", "Booking")',
                                      type: 'POST',
                                     data: { 'model': trainingModel },
                                      dataType: "json",
                                      success: function (result) {
                                         console.log(result)
                                         if (result != null) {
                                             //console.log()
                                             /// alert(result.ret_msg);
                                             bootbox.alert(result.Message);
                                             //$('#trnid').val('');
                                             //$('#compid').val('');
                                             $('#AdjustReqTraining').modal('hide');
                                             inittbSearchResult();

                                         }
                                         else {
                                             bootbox.alert(result.Message);
                                         }


                                      },
                                     error: function (result) {
                                         bootbox.alert(result.Message);
                                      }
                                 });


                        }


              function GetDropDownByNameTrainigStatus() {
                //  alert('T');
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("GetDropDownList", "Booking")',
                        data: { '_ddlType': 'training_status' },
                        dataType: 'json',
                        success: function (data) {

                            $("#inputStatus").empty();
                            $("#inputStatus").append('<option value="-1">--@Localizer["SelectAll"]--</option>');
                            $.each(data, function (id, result) {
                                if (result.dropdown_value == "Y" || result.dropdown_value == "A" || result.dropdown_value == "N") {
                                    $("#inputStatus").append('<option value="' + result.dropdown_value + '">' + result.dropdown_text + '</option>');
                                }
                                });

                            },
                            failure: function () {
                                $("#inputStatus").empty();
                                $("#inputStatus").append('<option value="-1">--@Localizer["SelectAll"]--</option>');
                            }
                        });
                        }



    function getTeamByLocationId(locationId) {
        var compnanyid = $("#txtCompNo").val();
        var locationId = $("#selLocationName").val();
              $.ajax({
                  url: '@Url.Action("GetTeam", "Booking")',
                  type: 'POST',
                  data: {
                      'companyId': compnanyid,
                      'locationId': locationId
                  },
                  dataType: "json",
                  success: function (data) {
                      $("#selTeamName").empty();
                      $("#selTeamName").append('<option value="-1">--@Localizer["SelectAll"]--</option>');
                      $.each(data, function (id, result) {
                          $("#selTeamName").append('<option value="' + result.TeamId + '">' + result.TeamNameTh + '</option>');
                      });
                  },
                  failure: function () {
                      $("#selTeamName").empty();
                      $("#selTeamName").append('<option value="-1">--@Localizer["SelectAll"]--</option>');
                  }
              });
         }



          function GetDropDownLocationByCompany() {
                  var compnanyid = $("#txtCompNo").val();
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("GetLocation", "Booking")',
                        data: { 'companyId': compnanyid },
                        dataType: 'json',
                        success: function (data) {

                            $("#selLocationName").empty();
                            $("#selLocationName").append('<option value="-1">--@Localizer["SelectAll"]--</option>');
                            $.each(data, function (id, result) {
                                $("#selLocationName").append('<option value="' + result.LocationId + '">' + result.LocationNameTh +'</option>');
                                });
                            },
                            failure: function () {
                                $("#selLocationName").empty();
                                $("#selLocationName").append('<option value="-1">--@Localizer["SelectAll"]--</option>');
                            }
                        });
                }

        function clearField() {

            $("#txtCompNo").val('');
            $("#txttaxID").val('');

            $("#txtReqNo").val('');
            $('#inputStatus').val('-1');
            $("#reqdateFrom").val('');
            $("#reqdateTo").val('');
            $("#inpbookingdateFrom").val('');
            $("#inpbookingdateTo").val('');

        }

 function inittbSearchResult() {

                            oTable = $('#tbSearchResult').DataTable({
                                processing: true, // for show progress bar
                                serverSide: true, // for process server side
                                filter: false, // this is for disable filter (search box)
                                orderMulti: false, // for disable multiple column at once
                                pageLength: 10,
                                order: [],
                                autoWidth: false,
                                searching: false,
                                destroy: true,
                                lengthChange: false,
                                "oLanguage": {
                                    "oPaginate": { "sPrevious": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-left"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg>', "sNext": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-right"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg>' },
                                    "sInfo": "Showing page _PAGE_ of _PAGES_",
                                    "sSearch": false,
                                    "sLengthMenu": "Results :  _MENU_",
                                },
                                "scrollX": false,
                                "language": {
                                    "zeroRecords": "No data found.",
                                    "decimal": ",",
                                    "thousands": "."
                                },
                                ajax: {
                                    url:'@Url.Action("Search", "Booking")',
                                    type: "POST",
                                    datatype: "JSON",
                                    //dataSrc:"",
                                    data: function (d) {
                                            d.companyName = $("#txtCompNo").val(),
                                           // d.Status = $("select[id$=inputStatus]").val(),
                                            d.TaxId = $("#txttaxID").val(),
                                            d.reqDateFrom = $("#reqdateFrom").val(),
                                            d.reqDateTo = $("#reqdateTo").val(),
                                            d.bookingDateFrom = $("#inpbookingdateFrom").val(),
                                            d.bookingDateTo = $("#inpbookingdateTo").val()

                                    }
                                },
                                columns: [

                                    {
                                        data: null, render: function (data, type, row) {
                                            return "  <ul class='table-controls'><li> <a href='#' onclick=openModal('edit','" + row.TrainingId + "');return false;  data-toggle='modal' data-target='.bd-addedit-modal-xl' data-original-title='แก้ไข'><svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-edit'><path d='M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7'></path><path d='M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z'></path></svg></a></li> ";

                                        },
                                        // orderable: false,
                                        className: 'text-center'
                                    },

                                    {
                                        data: null, render: function (data, type, row) {
                                            return "<span class='badge outline-badge-secondary shadow-none'>" + row.Status + "</span>";
                                        }

                                    },

                                    { "data": "CompanyNameTh"},
                                    { "data": "TaxId" },
                                    {
                                        "data": "RequestDate", "render": function (data, type, row) {
                                            if (type === "sort" || type === "type") {
                                                return data;
                                            }
                                            if (moment(data).format("DD/MM/YYYY") != 'Invalid date') {
                                                return moment(data).format("DD/MM/YYYY");
                                            }
                                            else {
                                                return data;
                                            }

                                        }
                                    },
                                    {
                                        "data": "BookingDate", "render": function (data, type, row) {
                                            if (type === "sort" || type === "type") {
                                                return data;
                                            }
                                            if (moment(data).format("DD/MM/YYYY") != 'Invalid date') {
                                                return moment(data).format("DD/MM/YYYY");
                                            }
                                            else {
                                                return data;
                                            }

                                        }
                                    },
                                    { "data": "Course" },
                                    { "data": "CountEngineer", className: 'text-center' },
                                    { "data": "CoursePrice", render: $.fn.dataTable.render.number(',', '.', 2, ''), className: 'text-right' },
                                    { "data": "Vat", className: 'text-right' },
                                    { "data": "TotalAmount", render: $.fn.dataTable.render.number(',', '.', 2, ''), className: 'text-right'}

                                ],
                                "order": [[0, "desc"]],
                                "stripeClasses": [],
                                drawCallback: function () { $('.dataTables_paginate > .pagination').addClass(' pagination-style-13 pagination-bordered mb-5'); }

                            });

                        }

                        function openModal(mode, trainingId) {
                            $("#frNew")[0].reset();
                            $('#AdjustReqTraining').modal('show');
                            $('input[name="optionsRadios"][value="01"]').attr('checked', true);

                            callTrainingDetail(trainingId);
                        }
                        function callTrainingDetail(trainingID) {

                                 $.ajax({
                                      url: '@Url.Action("GetTraining", "Booking")',
                                      type: 'POST',
                                      data: {
                                          'TrainingID': trainingID,

                                      },
                                      dataType: "json",
                                     success: function (result) {

                                         if (result != null) {
                                             console.log(result);
                                             $('#lblcompname').html(result.CompanyNameTh);
                                             $('#lbltaxid').html(result.TaxId);

                                             $('#selCourse').val(result.Course);

                                             $('#lblemail').html(result.ContractEmail);
                                             $('#lblcontphone').html(result.ContractPhone);

                                             $('#lblRemark').html(result.Remark);

                                             $('#Coursecost').val(result.CoursePrice);

                                             inittbEngineer(result.TrainingId);
                                             $('#trnid').val(result.TrainingId);
                                             $('#compid').val(result.CompanyId);
                                             $('#teamid').val(result.TeamId);
                                             $('#engid').val(result.EngineerId);
                                             $('#locid').val(result.LocationId);

                                             $('#bookingDate').val(result.BookingDateStr);
                                             $('#txtaisremark').val(result.RemarkForAis);

                                             $('#inputRequestdateFrom').html(result.RequestDateStr);
                                             $('#inputRequestdateTo').html(result.RequestDateStrTo);


                                         }
                                         else {

                                         }


                                      },
                                      failure: function () {

                                      }
                                 });


                        }


                    function getFormattedDate(date) {

                            let year = date.getFullYear();
                            let month = (1 + date.getMonth()).toString().padStart(2, '0');
                            let day = date.getDate().toString().padStart(2, '0');


                            return day + '/' + month + '/' + year;
                        }

                        function calculateCost(cost,count) {

                            var totalcost = 0;
                            totalcost = cost * count;
                            return totalcost;
                        }
                        function vat7(cost)
                        {
                            const formatter = new Intl.NumberFormat('en-US', {
                                minimumFractionDigits: 2,
                                maximumFractionDigits: 2,
                            });

                            var incvat = 0;
                            incvat = cost * (7 / 100);
                            incvat = formatter.format(incvat);
                           // alert(incvat);
                            return incvat;
                        }

        function taxCalculate(cost) {
            const formatter = new Intl.NumberFormat('en-US', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2,
            });

            var incTax = 0;
            incTax = cost * (3 / 100);
            incTax = formatter.format(incTax);
            // alert(incTax);
            return incTax;
        }

                   function inittbEngineer(Trainingid) {
                           var i = 0;
                            oTableEngineer = $('#tbSearchEngineer').DataTable({
                                processing: true, // for show progress bar
                                serverSide: true, // for process server side
                                filter: false, // this is for disable filter (search box)
                                orderMulti: false, // for disable multiple column at once
                                pageLength: 10,
                                order: [],
                                autoWidth: false,
                                searching: false,
                                destroy: true,
                                lengthChange: false,
                                "oLanguage": {
                                    "oPaginate": { "sPrevious": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-left"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg>', "sNext": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-right"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg>' },
                                    "sInfo": "Showing page _PAGE_ of _PAGES_",
                                    "sSearch": false,
                                    "sLengthMenu": "Results :  _MENU_",
                                },
                                "scrollX": false,
                                "language": {
                                    "zeroRecords": "No data found.",
                                    "decimal": ",",
                                    "thousands": "."
                                },
                                ajax: {
                                    url: '@Url.Action("SearchEngineer", "Booking")',
                                    type: "POST",
                                    datatype: "JSON",
                                    //dataSrc:"",
                                    data: function (d) {

                                        d.Trainingid = Trainingid


                                    }
                                },
                                columns: [

                                    { data: "LocationNameTh"},
                                    { data: "TeamNameTh" },
                                    { data: "StaffNameTh" },
                                    { data: "Position" },
                                    { data: "ContractPhone1" },
                                    { data: "ContractEmail" }



                                ],
                                "order": [[0, "desc"]],
                                "stripeClasses": [],
                                "initComplete": function (settings, json) {//here is the tricky part
                                    var count = $('#tbSearchEngineer tr').length - 1;
                                    $("tbody tr td.dataTables_empty").each(
                                        function () {
                                            if ($(this).text() == "No data available in table") {
                                               // alert('T');
                                              count = 0;
                                            }
                                        
                                             
                                        }
                                    );
                                    //  alert(count);

                                    //$('#tbSearchEngineer .LocationNameTh').each(function () {
                                    //    alert($(this).html());
                                    //});

                                    $('#rowCount').val(count);
                                    var count = $('#rowCount').val();
                                    var cost = $('#Coursecost').val();
                                 
                                  
                                    var ttcost = calculateCost(cost, count);


                                    var incvat = vat7(ttcost);
                                    $('#lblttcost').html(FormatNumber(ttcost));
                                  

                                    var _incvat = parseInt(incvat);
                                    var _ttcost = parseFloat(ttcost);
                                    var CoursetotalCost = _incvat + _ttcost;
                                    var totalcost = _incvat + _ttcost;
                                    CoursetotalCost = FormatNumber(CoursetotalCost);
                                   

                                    $('#lblCousetotal').html(CoursetotalCost);
                                 //   calculateCourcePrice();

                                    var intTax = 0;
                                    intTax = totalcost * (3 / 100);
                                    var totalTax = 0;
                                    var totalTax = parseFloat(totalcost) + parseFloat(intTax);
                                   // alert(CoursetotalCost);
                                   // alert(intTax);
                                    $('#lblvat7').html(parseInt(incvat));
                                    $('#lbltax').html(FormatNumber(intTax));
                                    $('#lblTotalAmountBytax').html(FormatNumber(totalTax));
                                },
                                drawCallback: function () { $('.dataTables_paginate > .pagination').addClass(' pagination-style-13 pagination-bordered mb-5'); }

                            });


        }




        function calculateCourcePrice() {
            var totalPrice = 0;
            var tEn = $('#tbSearchEngineer').dataTable();
            $.each(tEn.fnGetNodes(), function (index, value) {
                var price = 0;
                if ($(value).find('#txtCoursePrice').val() != "") {
                    price = parseFloat($(value).find('#txtCoursePrice').val());
                }
                totalPrice += price;

            });
            alert(totalPrice);
            var sumTotalPrice = parseFloat(isNaN(totalPrice) ? "" : totalPrice);
            var intVat = vat7(sumTotalPrice);
            var sumVatAmount = sumTotalPrice + parseFloat(intVat);

            var intTax = taxCalculate(sumTotalPrice);
            var totalTax = parseFloat(sumTotalPrice) + parseFloat(intTax);

            //totalTax = parseFloat(totalTax).toFixed(2);
            if (isNaN(intVat)) {
                intVat = 0;
            }

            if (isNaN(totalTax)) {
                totalTax = 0;
            }

            if (isNaN(intTax)) {
                intTax = 0;
            }

            $('#lblttcost').html(isNaN(totalPrice) ? "0" : FormatNumber(totalPrice));
            $('#lblvat7').html(intVat);
            $('#lblCousetotal').html(isNaN(sumVatAmount) ? "0" : FormatNumber(sumVatAmount));


            $('#lbltax').html(intTax);
            $('#lblTotalAmountBytax').html(FormatNumber(totalTax));

        }


        function FormatNumber(number, numberOfDigits) {
            try {
                return new Intl.NumberFormat('en-US').format(parseFloat(number).toFixed(2));
            } catch (error) {
                return 0;
            }
        }
    </script>

}


