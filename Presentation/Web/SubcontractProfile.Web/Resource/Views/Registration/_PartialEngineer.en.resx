<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountName" xml:space="preserve">
    <value>Account Name</value>
  </data>
  <data name="AccountNo" xml:space="preserve">
    <value>Account No</value>
  </data>
  <data name="AttachCertificate" xml:space="preserve">
    <value>Certificate Attach file</value>
  </data>
  <data name="AttachProfile" xml:space="preserve">
    <value>Proflie img attach file</value>
  </data>
  <data name="AttachWorkPermit" xml:space="preserve">
    <value>Work permit attach file</value>
  </data>
  <data name="BankInfomation" xml:space="preserve">
    <value>Bank Infomation</value>
  </data>
  <data name="BankName" xml:space="preserve">
    <value>Bank Name</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth Date</value>
  </data>
  <data name="CertificateExpireDate" xml:space="preserve">
    <value>Certificate Expire Date</value>
  </data>
  <data name="CertificateInfomation" xml:space="preserve">
    <value>Certificate Infomation</value>
  </data>
  <data name="CertificateNo" xml:space="preserve">
    <value>Certificate No</value>
  </data>
  <data name="CertificateType" xml:space="preserve">
    <value>Certificate Type</value>
  </data>
  <data name="ChooseFile" xml:space="preserve">
    <value>Choose File</value>
  </data>
  <data name="ChooseFileType" xml:space="preserve">
    <value>Support Type File pdf,jpg,jpeg,bmp,gif,tif,tiff,png</value>
  </data>
  <data name="CitizenID" xml:space="preserve">
    <value>Citizen ID</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="ContractInfomation" xml:space="preserve">
    <value>Contract Infomation</value>
  </data>
  <data name="Education" xml:space="preserve">
    <value>Education</value>
  </data>
  <data name="EducationInfomation" xml:space="preserve">
    <value>Education infomation</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Contract email</value>
  </data>
  <data name="Engineer" xml:space="preserve">
    <value>Engineer</value>
  </data>
  <data name="EngineerInformation" xml:space="preserve">
    <value>Engineer Information</value>
  </data>
  <data name="ErrorAccountName" xml:space="preserve">
    <value>Please fill Account Name.</value>
  </data>
  <data name="ErrorAccountNo" xml:space="preserve">
    <value>Please fill Account No.</value>
  </data>
  <data name="ErrorBankName" xml:space="preserve">
    <value>Please fill Bank Name.</value>
  </data>
  <data name="ErrorLocationName" xml:space="preserve">
    <value>Please fill Location Name.</value>
  </data>
  <data name="ErrorStaffName" xml:space="preserve">
    <value>Please Staff Name.</value>
  </data>
  <data name="ErrorTeamName" xml:space="preserve">
    <value>Please fill Team Name.</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="FullNameEng" xml:space="preserve">
    <value>FirstName-LastName (TH)</value>
  </data>
  <data name="FuulNameThai" xml:space="preserve">
    <value>FirstName-LastName (EN)</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="IdentityBy" xml:space="preserve">
    <value>Identity by</value>
  </data>
  <data name="IdentityCardAddress" xml:space="preserve">
    <value>Identity Card Address</value>
  </data>
  <data name="Languages" xml:space="preserve">
    <value>Languages</value>
  </data>
  <data name="LanguagesInfomation" xml:space="preserve">
    <value>Languages infomation</value>
  </data>
  <data name="ListeningEng" xml:space="preserve">
    <value>Listening Eng</value>
  </data>
  <data name="ListeningThai" xml:space="preserve">
    <value>Listening Thai</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="LocationName" xml:space="preserve">
    <value>Location Name</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="Nationality" xml:space="preserve">
    <value>Nationality</value>
  </data>
  <data name="Personal" xml:space="preserve">
    <value>Personal</value>
  </data>
  <data name="PersonalAttachfile" xml:space="preserve">
    <value>Attach File Citizen Card</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Race" xml:space="preserve">
    <value>Race</value>
  </data>
  <data name="ReadingEng" xml:space="preserve">
    <value>Reading Eng</value>
  </data>
  <data name="ReadingThai" xml:space="preserve">
    <value>Reading Thai</value>
  </data>
  <data name="RegisterType" xml:space="preserve">
    <value>Register Type</value>
  </data>
  <data name="Religion" xml:space="preserve">
    <value>Religion</value>
  </data>
  <data name="SizeClothes" xml:space="preserve">
    <value>Shirt Size</value>
  </data>
  <data name="SizeFile" xml:space="preserve">
    <value>The pdf file size must not be more than 1 Mb or the file size jpg, jpeg, bmp, gif, tif, tiff, png must not be more than 3 Mb.</value>
  </data>
  <data name="SpeakingEng" xml:space="preserve">
    <value>Speaking Eng</value>
  </data>
  <data name="SpeakingThai" xml:space="preserve">
    <value>Speaking Thai</value>
  </data>
  <data name="StaffName" xml:space="preserve">
    <value>Staff Name</value>
  </data>
  <data name="StaffNameEnglish" xml:space="preserve">
    <value>Staff Name (EN)</value>
  </data>
  <data name="StaffNameThai" xml:space="preserve">
    <value>Staff Name (TH)</value>
  </data>
  <data name="Team" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="TeamName" xml:space="preserve">
    <value>Team Name</value>
  </data>
  <data name="Tel" xml:space="preserve">
    <value>Contract Phone1</value>
  </data>
  <data name="Tel2" xml:space="preserve">
    <value>Contract Phone2</value>
  </data>
  <data name="TitleName" xml:space="preserve">
    <value>Title Name</value>
  </data>
  <data name="ToolInfomation" xml:space="preserve">
    <value>Tool Infomation</value>
  </data>
  <data name="Toolotdr" xml:space="preserve">
    <value>Tool otdr</value>
  </data>
  <data name="Toolsplicing" xml:space="preserve">
    <value>Tool splicing</value>
  </data>
  <data name="VehicleAttachFile" xml:space="preserve">
    <value>Vehicle Attach File</value>
  </data>
  <data name="VehicleBrand" xml:space="preserve">
    <value>Vehicle Brand</value>
  </data>
  <data name="VehicleColor" xml:space="preserve">
    <value>Vehicle Color</value>
  </data>
  <data name="VehicleInfomation" xml:space="preserve">
    <value>Vehicle Infomation</value>
  </data>
  <data name="Vehiclelicenseplate" xml:space="preserve">
    <value>Vehicle license plate</value>
  </data>
  <data name="VehicleSerise" xml:space="preserve">
    <value>Vehicle Serise</value>
  </data>
  <data name="VehicleType" xml:space="preserve">
    <value>Vehicle Type</value>
  </data>
  <data name="VehicleYear" xml:space="preserve">
    <value>Vehicle Year</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="WorkExperienceInfomation" xml:space="preserve">
    <value>Work Experience Infomation</value>
  </data>
  <data name="WorkPermitNo" xml:space="preserve">
    <value>Work permit no</value>
  </data>
  <data name="WritingEng" xml:space="preserve">
    <value>Writing Eng</value>
  </data>
  <data name="WritingThai" xml:space="preserve">
    <value>Writing Thai</value>
  </data>
</root>