<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountName" xml:space="preserve">
    <value>Account Name</value>
  </data>
  <data name="AccountNumber" xml:space="preserve">
    <value>Account Number</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddEngineer" xml:space="preserve">
    <value>Add Engineer</value>
  </data>
  <data name="AttachCarPic" xml:space="preserve">
    <value>Vehicle Attach File</value>
  </data>
  <data name="AttachCertificate" xml:space="preserve">
    <value>CertificateAttach File</value>
  </data>
  <data name="AttachIDCard" xml:space="preserve">
    <value>Citizen Card Attach File</value>
  </data>
  <data name="AttachProfile" xml:space="preserve">
    <value>Profile Attach File </value>
  </data>
  <data name="AttachWorkPermit" xml:space="preserve">
    <value>Work Permit Attach File </value>
  </data>
  <data name="BankInformation" xml:space="preserve">
    <value>Bank Information</value>
  </data>
  <data name="BankName" xml:space="preserve">
    <value>Bank Name</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth Date</value>
  </data>
  <data name="CarBrand" xml:space="preserve">
    <value>Vehicle Brand</value>
  </data>
  <data name="CarColor" xml:space="preserve">
    <value>Vehicle Color</value>
  </data>
  <data name="CardType" xml:space="preserve">
    <value>Identity By</value>
  </data>
  <data name="CarInformation" xml:space="preserve">
    <value>Vehicle Information</value>
  </data>
  <data name="CarModel" xml:space="preserve">
    <value>Vehicle Model</value>
  </data>
  <data name="CarType" xml:space="preserve">
    <value>Vehicle Type</value>
  </data>
  <data name="CarYears" xml:space="preserve">
    <value>Vehicle Years</value>
  </data>
  <data name="CertificateExpireDate" xml:space="preserve">
    <value>Certificate Expire Date</value>
  </data>
  <data name="CertificateInformation" xml:space="preserve">
    <value>Certificate Information</value>
  </data>
  <data name="CertificateNo" xml:space="preserve">
    <value>Certificate No</value>
  </data>
  <data name="CertificateType" xml:space="preserve">
    <value>Certificate Type</value>
  </data>
  <data name="ChooseFile" xml:space="preserve">
    <value>Choose File</value>
  </data>
  <data name="ChooseFileType" xml:space="preserve">
    <value>Support Type File pdf,jpg,jpeg,bmp,gif,tif,tiff,png</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="ContractInformation" xml:space="preserve">
    <value>Contract Information</value>
  </data>
  <data name="ddlPleaseSelect" xml:space="preserve">
    <value>Please Select</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditEngineer" xml:space="preserve">
    <value>Edit Engineer</value>
  </data>
  <data name="Education" xml:space="preserve">
    <value>Education</value>
  </data>
  <data name="EducationInformation" xml:space="preserve">
    <value>Education Information</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Engineer" xml:space="preserve">
    <value>Engineer</value>
  </data>
  <data name="EquipmentInformation" xml:space="preserve">
    <value>Equipment Information</value>
  </data>
  <data name="ErrorAccountName" xml:space="preserve">
    <value>Please fill Account Name</value>
  </data>
  <data name="ErrorAccountNumber" xml:space="preserve">
    <value>Please fill Account Number</value>
  </data>
  <data name="ErrorBankName" xml:space="preserve">
    <value>Please fill Bank Name.</value>
  </data>
  <data name="ErrorEmail" xml:space="preserve">
    <value>Please fill valid Email.</value>
  </data>
  <data name="ErrorFirstNameLastNameEnglish" xml:space="preserve">
    <value>Please fill First Name and Last Name English.</value>
  </data>
  <data name="ErrorFirstNameLastNameThai" xml:space="preserve">
    <value>Please fill First Name and Last Name Thai.</value>
  </data>
  <data name="ErrorIDCard" xml:space="preserve">
    <value>Please fill ID Card</value>
  </data>
  <data name="ErrorLocationName" xml:space="preserve">
    <value>Please fill Location Name.</value>
  </data>
  <data name="ErrorStaffName" xml:space="preserve">
    <value>Please fill Staff Name.</value>
  </data>
  <data name="ErrorStaffNameThai" xml:space="preserve">
    <value>Please fill Staff Name (TH).</value>
  </data>
  <data name="ErrorTeamName" xml:space="preserve">
    <value>Please fill Team Name.</value>
  </data>
  <data name="ErrorTel" xml:space="preserve">
    <value>Please fill Tel.</value>
  </data>
  <data name="ErrorTitleName" xml:space="preserve">
    <value>Please fill Title</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="FirstNameLastNameEnglish" xml:space="preserve">
    <value>FirstName-LastName (EN)</value>
  </data>
  <data name="FirstNameLastNameThai" xml:space="preserve">
    <value>FirstName-LastName (TH)</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="IDCard" xml:space="preserve">
    <value>Citizen ID</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>ภาษา</value>
  </data>
  <data name="LanguageInformation" xml:space="preserve">
    <value>Language Information</value>
  </data>
  <data name="LicensePlate" xml:space="preserve">
    <value>Vehicle license plate</value>
  </data>
  <data name="ListeningEng" xml:space="preserve">
    <value>Listening Eng</value>
  </data>
  <data name="ListeningThai" xml:space="preserve">
    <value>Listening Thai</value>
  </data>
  <data name="LocationName" xml:space="preserve">
    <value>Location Name</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="Nationality" xml:space="preserve">
    <value>Nationality</value>
  </data>
  <data name="OTDR" xml:space="preserve">
    <value>Tool OTDR</value>
  </data>
  <data name="PermanentAddress" xml:space="preserve">
    <value>Identity card address</value>
  </data>
  <data name="Personal" xml:space="preserve">
    <value>Personal</value>
  </data>
  <data name="Postion" xml:space="preserve">
    <value>Postion</value>
  </data>
  <data name="QuestionDelete" xml:space="preserve">
    <value>Do you want delete this information?</value>
  </data>
  <data name="Race" xml:space="preserve">
    <value>Race</value>
  </data>
  <data name="ReadingEng" xml:space="preserve">
    <value>Reading Eng</value>
  </data>
  <data name="ReadingThai" xml:space="preserve">
    <value>Reading Thai</value>
  </data>
  <data name="Religion" xml:space="preserve">
    <value>Religion</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchResult" xml:space="preserve">
    <value>Search Result</value>
  </data>
  <data name="SizeClothes" xml:space="preserve">
    <value>Shirt Size</value>
  </data>
  <data name="SizeFile" xml:space="preserve">
    <value>The pdf file size must not be more than 1 Mb or the file size jpg, jpeg, bmp, gif, tif, tiff, png must not be more than 3 Mb.</value>
  </data>
  <data name="SpeakingEng" xml:space="preserve">
    <value>Speaking Eng</value>
  </data>
  <data name="SpeakingThai" xml:space="preserve">
    <value>Speaking Thai</value>
  </data>
  <data name="StaffName" xml:space="preserve">
    <value>Staff Name</value>
  </data>
  <data name="StaffNameEnglish" xml:space="preserve">
    <value>Staff Name (EN)</value>
  </data>
  <data name="StaffNameThai" xml:space="preserve">
    <value>Staff Name (TH)</value>
  </data>
  <data name="TeamName" xml:space="preserve">
    <value>Team Name</value>
  </data>
  <data name="TeamNameTH" xml:space="preserve">
    <value>Team Name (TH)</value>
  </data>
  <data name="Tel" xml:space="preserve">
    <value>Contract Phone1</value>
  </data>
  <data name="Tel2" xml:space="preserve">
    <value>Contract Phone2</value>
  </data>
  <data name="TitleName" xml:space="preserve">
    <value>Title Name</value>
  </data>
  <data name="Toolsplicing" xml:space="preserve">
    <value>Tool splicing</value>
  </data>
  <data name="WorkExperience" xml:space="preserve">
    <value>Work Experience</value>
  </data>
  <data name="WorkPermitNo" xml:space="preserve">
    <value>Work Permit No</value>
  </data>
  <data name="WritingEng" xml:space="preserve">
    <value>Writing Eng</value>
  </data>
  <data name="WritingThai" xml:space="preserve">
    <value>Writing Thai</value>
  </data>
</root>