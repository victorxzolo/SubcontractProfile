<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddAddress" xml:space="preserve">
    <value>Add Address</value>
  </data>
  <data name="AddLocation" xml:space="preserve">
    <value>Add Location</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AddressType" xml:space="preserve">
    <value>Address Type</value>
  </data>
  <data name="Bank" xml:space="preserve">
    <value>Bank</value>
  </data>
  <data name="BankAccountName" xml:space="preserve">
    <value>Bank Account Name</value>
  </data>
  <data name="BankAccountNo" xml:space="preserve">
    <value>Bank Account No</value>
  </data>
  <data name="BankAttachFile" xml:space="preserve">
    <value>Bank Attach File</value>
  </data>
  <data name="BankBranchName" xml:space="preserve">
    <value>Bank Branch Name</value>
  </data>
  <data name="BankBranchNo" xml:space="preserve">
    <value>Bank Branch No</value>
  </data>
  <data name="Bankcode" xml:space="preserve">
    <value>Bank code</value>
  </data>
  <data name="BankName" xml:space="preserve">
    <value>Bank Name</value>
  </data>
  <data name="BranchAddress" xml:space="preserve">
    <value>Branch Address</value>
  </data>
  <data name="Building" xml:space="preserve">
    <value>Building</value>
  </data>
  <data name="ChooseFile" xml:space="preserve">
    <value>Choose File</value>
  </data>
  <data name="ChooseFileType" xml:space="preserve">
    <value>Support Type File jpg,jpeg,bmp,gif,tif,tiff,png,pdf</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>ปิด</value>
  </data>
  <data name="Companygroupmail" xml:space="preserve">
    <value>Company group mail</value>
  </data>
  <data name="Companymaincontractphone" xml:space="preserve">
    <value>Company main contract phone</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="ContractEmail" xml:space="preserve">
    <value>Contract Email</value>
  </data>
  <data name="ContractPhone" xml:space="preserve">
    <value>Contract Phone</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="District" xml:space="preserve">
    <value>District</value>
  </data>
  <data name="DocumentAddress" xml:space="preserve">
    <value>Document Address</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditLocation" xml:space="preserve">
    <value>Edit Location</value>
  </data>
  <data name="ErrorBankAccountName" xml:space="preserve">
    <value>Please fill Bank Account Name.</value>
  </data>
  <data name="ErrorBankAccountNo" xml:space="preserve">
    <value>Please fill Bank Account No.</value>
  </data>
  <data name="ErrorBankBranchName" xml:space="preserve">
    <value>Please fill Bank Branch Name.</value>
  </data>
  <data name="ErrorBankName" xml:space="preserve">
    <value>Please fill Bank Name.</value>
  </data>
  <data name="ErrorCompanymaincontractphone" xml:space="preserve">
    <value>Please fill Company main contract phone.</value>
  </data>
  <data name="ErrorCountry" xml:space="preserve">
    <value>Please fill Country</value>
  </data>
  <data name="ErrorDistrict" xml:space="preserve">
    <value>Please fill District</value>
  </data>
  <data name="ErrorEmail" xml:space="preserve">
    <value>Please fill valid Email </value>
  </data>
  <data name="ErrorHouseNo" xml:space="preserve">
    <value>Please fill House No</value>
  </data>
  <data name="ErrorInstallationscontractphone" xml:space="preserve">
    <value>Please fill Installations contract phone.</value>
  </data>
  <data name="ErrorLocationCode" xml:space="preserve">
    <value>Please fill Location Code.</value>
  </data>
  <data name="ErrorLocationNameAlias" xml:space="preserve">
    <value>Please fill Location Name Alias.</value>
  </data>
  <data name="ErrorLocationNameThai" xml:space="preserve">
    <value>Please fill  Location Name(TH).</value>
  </data>
  <data name="ErrorMaintenencecontractphone" xml:space="preserve">
    <value>Please fill Maintenence contract phone.</value>
  </data>
  <data name="ErrorPhoneNo" xml:space="preserve">
    <value>Please fill Phone No.</value>
  </data>
  <data name="ErrorProvince" xml:space="preserve">
    <value>Please fill Province</value>
  </data>
  <data name="ErrorSubdistrict" xml:space="preserve">
    <value>Please fill Subdistrict</value>
  </data>
  <data name="ErrorZipcode" xml:space="preserve">
    <value>Please fill Zip Code</value>
  </data>
  <data name="ErrorZone" xml:space="preserve">
    <value>Please fill Zone</value>
  </data>
  <data name="Etccontractmail" xml:space="preserve">
    <value>Etc contract mail</value>
  </data>
  <data name="Etccontractphone" xml:space="preserve">
    <value>Etc contract phone</value>
  </data>
  <data name="Floor" xml:space="preserve">
    <value>Floor</value>
  </data>
  <data name="HouseNo" xml:space="preserve">
    <value>House No</value>
  </data>
  <data name="Installationcontractmail" xml:space="preserve">
    <value>Installation contract mail</value>
  </data>
  <data name="Installationscontractphone" xml:space="preserve">
    <value>Installations contract phone</value>
  </data>
  <data name="Inventorycontractmail" xml:space="preserve">
    <value>Inventory contract mail</value>
  </data>
  <data name="Inventorycontractphone" xml:space="preserve">
    <value>Inventory contract phone</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="LocationAddress" xml:space="preserve">
    <value>Location Address</value>
  </data>
  <data name="LocationCode" xml:space="preserve">
    <value>Location Code</value>
  </data>
  <data name="LocationNameAilas" xml:space="preserve">
    <value>Location Name Ailas</value>
  </data>
  <data name="LocationNameEng" xml:space="preserve">
    <value>Location Name (EN)</value>
  </data>
  <data name="LocationNameThai" xml:space="preserve">
    <value>Location Name (TH)</value>
  </data>
  <data name="Maintanencecontractmail" xml:space="preserve">
    <value>Maintanence contract mail</value>
  </data>
  <data name="Maintenencecontractphone" xml:space="preserve">
    <value>Maintenence contract phone</value>
  </data>
  <data name="Moo" xml:space="preserve">
    <value>Moo</value>
  </data>
  <data name="OutofServiceStoragelocation" xml:space="preserve">
    <value>Out of Service Storage location</value>
  </data>
  <data name="Panaltycontractmail" xml:space="preserve">
    <value>Penalty contract mail</value>
  </data>
  <data name="Panaltycontractphone" xml:space="preserve">
    <value>Penalty contract phone</value>
  </data>
  <data name="Paymentcontractmail" xml:space="preserve">
    <value>Payment contract mail</value>
  </data>
  <data name="Paymentcontractphone" xml:space="preserve">
    <value>Payment contract phone</value>
  </data>
  <data name="PhoneNo" xml:space="preserve">
    <value>Phone No</value>
  </data>
  <data name="POPAddress" xml:space="preserve">
    <value>POP Address</value>
  </data>
  <data name="PostAddress" xml:space="preserve">
    <value>Post Address</value>
  </data>
  <data name="Province" xml:space="preserve">
    <value>Province</value>
  </data>
  <data name="QuestionDelete" xml:space="preserve">
    <value>Do you want delete this information</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Room" xml:space="preserve">
    <value>Room</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchResult" xml:space="preserve">
    <value>Search Result</value>
  </data>
  <data name="ShippingAddress" xml:space="preserve">
    <value>Shipping Address</value>
  </data>
  <data name="ShipTo" xml:space="preserve">
    <value>Ship To</value>
  </data>
  <data name="SizeFile" xml:space="preserve">
    <value>The pdf file size must not be more than 1 Mb or the file size jpg, jpeg, bmp, gif, tif, tiff, png must not be more than 3 Mb.</value>
  </data>
  <data name="Soi" xml:space="preserve">
    <value>Soi</value>
  </data>
  <data name="Storage" xml:space="preserve">
    <value>Storage</value>
  </data>
  <data name="StorageLocation" xml:space="preserve">
    <value>Storage Location</value>
  </data>
  <data name="street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Subdistrict" xml:space="preserve">
    <value>Subdistrict</value>
  </data>
  <data name="TaxAddress" xml:space="preserve">
    <value>Tax Address</value>
  </data>
  <data name="VatbranchNumber" xml:space="preserve">
    <value>Vat branch Number</value>
  </data>
  <data name="Village" xml:space="preserve">
    <value>Village</value>
  </data>
  <data name="WTAddress" xml:space="preserve">
    <value>WT Address</value>
  </data>
  <data name="Zipcode" xml:space="preserve">
    <value>Zipcode</value>
  </data>
  <data name="Zone" xml:space="preserve">
    <value>Zone</value>
  </data>
</root>